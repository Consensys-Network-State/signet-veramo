{
  "issuer": {
    "id": "did:ethr:sepolia:0x02ff9ef29a21fdacb34a838d45cf88b80db26d2a970498172b77894eac99c62c10"
  },
  "credentialSubject": {
    "id": "did:example:grant-recipient-1",
    "agreement": {
      "metadata": {
        "id": "did:example:123456789abcdefghi",
        "templateId": "did:template:grant-agreement-v1",
        "version": "1.0.0",
        "createdAt": "2024-03-20T12:00:00Z",
        "name": "Grant Agreement",
        "author": "Ecosystem Name Foundation",
        "description": "Standard grant agreement for ecosystem development funding"
      },
      "variables": [
        {
          "id": "effectiveDate",
          "type": "dateTime",
          "name": "Effective Date",
          "description": "The date when this agreement becomes effective",
          "value": "",
          "validation": {
            "required": true,
            "message": "Effective date is required",
            "minLength": "0",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "foundationName",
          "type": "string",
          "name": "Foundation Name",
          "description": "Legal name of the foundation entity",
          "value": "Ecosystem Name Foundation",
          "validation": {
            "required": true,
            "minLength": "3",
            "message": "Foundation name is required",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "jurisdiction",
          "type": "string",
          "name": "Jurisdiction",
          "description": "Legal jurisdiction under which the foundation operates",
          "value": "Jurisdiction",
          "validation": {
            "required": true,
            "message": "Jurisdiction is required",
            "minLength": "0",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "foundationAddress",
          "type": "address",
          "name": "Foundation Address",
          "description": "Blockchain address of the foundation",
          "value": "0x123f6e75d1BE0ee699C7Eb67594FEbC14ab3AA78",
          "validation": {
            "required": true,
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "message": "Invalid D3 address format",
            "minLength": "0",
            "maxLength": "0",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "grantRecipientName",
          "type": "string",
          "name": "Grant Recipient Name",
          "description": "Full name of the grant recipient",
          "value": "",
          "validation": {
            "required": true,
            "minLength": "2",
            "message": "Grant recipient name is required",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "grantRecipientAddress",
          "type": "address",
          "name": "Grant Recipient Address",
          "description": "Blockchain address of the grant recipient",
          "value": "",
          "validation": {
            "required": true,
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "message": "Invalid D3 address format",
            "minLength": "0",
            "maxLength": "0",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "ecosystemName",
          "type": "string",
          "name": "Ecosystem Name",
          "description": "Name of the blockchain ecosystem",
          "value": "Ecosystem Name",
          "validation": {
            "required": true,
            "message": "Ecosystem name is required",
            "minLength": "0",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "workTokenName",
          "type": "string",
          "name": "Work Token Name",
          "description": "Name of the ecosystem's native token",
          "value": "WORK",
          "validation": {
            "required": true,
            "message": "Token name is required",
            "minLength": "0",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "tokenAllocatorName",
          "type": "string",
          "name": "Token Allocator Name",
          "description": "Name of the person designated to allocate tokens",
          "value": "",
          "validation": {
            "required": true,
            "message": "Token allocator name is required",
            "minLength": "0",
            "maxLength": "0",
            "pattern": "",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "tokenAllocatorAddress",
          "type": "address",
          "name": "Token Allocator Address",
          "description": "Blockchain address of the token allocator",
          "value": "",
          "validation": {
            "required": true,
            "pattern": "^0x[a-fA-F0-9]{40}$",
            "message": "Invalid D3 address format",
            "minLength": "0",
            "maxLength": "0",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "rfpNumber",
          "type": "string",
          "name": "RFP Number",
          "description": "Reference number for the Request for Proposal",
          "value": "",
          "validation": {
            "required": true,
            "pattern": "^WRFP-[0-9]+$",
            "message": "RFP number must be in format WRFP-XXX",
            "minLength": "0",
            "maxLength": "0",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "rfpLink",
          "type": "string",
          "name": "RFP Link",
          "description": "URL link to the Request for Proposal document",
          "value": "",
          "validation": {
            "required": true,
            "pattern": "^https?:\\/\\/.*",
            "message": "Must be a valid URL",
            "minLength": "0",
            "maxLength": "0",
            "min": "0",
            "max": "0"
          }
        },
        {
          "id": "grantAmount",
          "type": "number",
          "name": "Grant Amount",
          "description": "Amount of tokens to be granted to the recipient",
          "value": "0",
          "validation": {
            "required": true,
            "min": "1",
            "message": "Grant amount must be greater than zero",
            "minLength": "0",
            "maxLength": "0",
            "pattern": "",
            "max": "0"
          }
        }
      ],
      "content": {
        "type": "md",
        "data": "# **Grant Agreement**\n\nThis Grant Agreement (**\"Agreement\"**) is entered into on :variable{id=\"effectiveDate\"}, (the **:variable{id=\"effectiveDate\" property=\"name\"}**), between :variable{id=\"foundationName\"}, a :variable{id=\"jurisdiction\"} foundation company (the **:variable{id=\"foundationName\" property=\"name\"}**) with D3 address :address{value=\"0x123f6e75d1BE0ee699C7Eb67594FEbC14ab3AA78\" display=\"truncated\"}, and :variable{id=\"grantRecipientName\"}, an individual with address :variable{id=\"grantRecipientAddress\"} (**:variable{id=\"grantRecipientName\" property=\"name\"}**).\n\nThe Foundation has been established, in part, to help promote growth of the :variable{id=\"ecosystemName\"} ecosystem and seeks to award grants to promote development consistent with the collective decision making of the :variable{id=\"workTokenName\"} token (**:variable{id=\"workTokenName\"}**) holder community (the **:variable{id=\"workTokenName\"} Community**).\n\nThe Grant Recipient has been selected by the Foundation Designated Token Allocator :variable{id=\"tokenAllocatorName\"} (**:variable{id=\"tokenAllocatorName\" property=\"name\"}**) with address :variable{id=\"tokenAllocatorAddress\"} to receive a grant subject and in accordance with the terms and conditions of this Agreement.\n\nTHEREFORE, the parties agree as follows:\n\n## **1. GRANT RECIPIENT ACTIVITIES**\n\n1.1 Grants. Foundation and Grant Recipient are entering into this Agreement in connection with RFP#: :variable{id=\"rfpNumber\"}, as set forth at :variable{id=\"rfpLink\"}, which describes the specific activities to be performed by Grant Recipient (the **\"Grant\"**).\n\n1.2 Performance of Grant Recipient Activities. Grant Recipient will perform the activities described in the Grant (the **\"Grant Recipient Activities\"**) in accordance with the terms and conditions set forth in each such Grant and this Agreement and with any applicable laws.\n\n## **2. GRANT DISTRIBUTION**\n\nThe Token Allocator will pay Grant Recipient on behalf of the Foundation the amount of :variable{id=\"grantAmount\"} :variable{id=\"workTokenName\"} tokens in accordance with the terms set forth in this agreement.\n\nIN WITNESS WHEREOF, the Grant Recipient has executed this Agreement on the date first written above.\n\nName: :variable{id=\"grantRecipientName\"}"
      },
      "execution": {
        "type": "dfsm",
        "data": {
          "states": [
            "AWAITING_SIGNATURES",
            "ACTIVE_PENDING_REVIEW",
            "APPROVED",
            "REJECTED"
          ],
          "inputs": {
            "grantRecipientSignature": {
              "id": "grantRecipientSignature",
              "type": "VerifiedCredentialEIP712",
              "schema": "verified-credential-eip712.schema.json",
              "displayName": "Grant Recipient Signature",
              "description": "EIP712 signature from the grant recipient accepting the terms of the grant agreement",
              "value": {
                "approved": true,
                "type": "GrantRecipientSignature"
              },
              "signer": "${grantRecipientAddress}"
            },
            "workApprovedSignature": {
              "id": "workApprovedSignature",
              "type": "VerifiedCredentialEIP712",
              "schema": "verified-credential-eip712.schema.json",
              "displayName": "Work Approved Signature",
              "description": "EIP712 signature from the token allocator attesting that the grant work has been completed successfully",
              "value": {
                "approved": true,
                "type": "WorkApprovedSignature"
              },
              "signer": "${tokenAllocatorAddress}"
            },
            "workRejectedSignature": {
              "id": "workRejectedSignature",
              "type": "VerifiedCredentialEIP712",
              "schema": "verified-credential-eip712.schema.json",
              "displayName": "Work Rejected Signature",
              "description": "EIP712 signature from the token allocator attesting that the grant work has been rejected",
              "value": {
                "approved": false,
                "type": "WorkRejectedSignature"
              },
              "signer": "${tokenAllocatorAddress}"
            }
          },
          "transitions": [
            {
              "from": "AWAITING_SIGNATURES",
              "to": "ACTIVE_PENDING_REVIEW",
              "conditions": [
                {
                  "type": "isValid",
                  "inputs": [
                    "grantRecipientSignature"
                  ]
                }
              ]
            },
            {
              "from": "ACTIVE_PENDING_REVIEW",
              "to": "COMPLETED",
              "conditions": [
                {
                  "type": "isValid",
                  "inputs": [
                    "workApprovedSignature"
                  ]
                }
              ]
            },
            {
              "from": "ACTIVE_PENDING_REVIEW",
              "to": "REJECTED",
              "conditions": [
                {
                  "type": "isValid",
                  "inputs": [
                    "workRejectedSignature"
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  },
  "type": [
    "VerifiableCredential",
    "AgreementCredential"
  ],
  "issuanceDate": "2025-04-07T17:29:36.742Z",
  "@context": [
    "https://www.w3.org/2018/credentials/v1"
  ],
  "proof": {
    "verificationMethod": "did:ethr:sepolia:0x02ff9ef29a21fdacb34a838d45cf88b80db26d2a970498172b77894eac99c62c10#controller",
    "created": "2025-04-07T17:29:36.742Z",
    "proofPurpose": "assertionMethod",
    "type": "EthereumEip712Signature2021",
    "proofValue": "0x09fec3663ccf427439994bdf906a9bb73104495c176c3e9aee157430b06a3e0b34eddb08e13bb1fc7f3c91f7d37a38a66ad1037c2b87f847a98d7fdfa9db1fb61b",
    "eip712": {
      "domain": {
        "chainId": 11155111,
        "name": "VerifiableCredential",
        "version": "1"
      },
      "types": {
        "EIP712Domain": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "version",
            "type": "string"
          },
          {
            "name": "chainId",
            "type": "uint256"
          }
        ],
        "CredentialSubject": [
          {
            "name": "agreement",
            "type": "Agreement"
          },
          {
            "name": "id",
            "type": "string"
          }
        ],
        "Agreement": [
          {
            "name": "content",
            "type": "Content"
          },
          {
            "name": "execution",
            "type": "Execution"
          },
          {
            "name": "metadata",
            "type": "Metadata"
          },
          {
            "name": "variables",
            "type": "Variables[]"
          }
        ],
        "Content": [
          {
            "name": "data",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          }
        ],
        "Execution": [
          {
            "name": "data",
            "type": "Data"
          },
          {
            "name": "type",
            "type": "string"
          }
        ],
        "Data": [
          {
            "name": "inputs",
            "type": "Inputs"
          },
          {
            "name": "states",
            "type": "string[]"
          },
          {
            "name": "transitions",
            "type": "Transitions[]"
          }
        ],
        "Inputs": [
          {
            "name": "grantRecipientSignature",
            "type": "GrantRecipientSignature"
          },
          {
            "name": "workApprovedSignature",
            "type": "WorkApprovedSignature"
          }
        ],
        "GrantRecipientSignature": [
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "displayName",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "schema",
            "type": "string"
          },
          {
            "name": "signer",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "value",
            "type": "Value"
          }
        ],
        "Value": [
          {
            "name": "approved",
            "type": "bool"
          },
          {
            "name": "type",
            "type": "string"
          }
        ],
        "WorkApprovedSignature": [
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "displayName",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "schema",
            "type": "string"
          },
          {
            "name": "signer",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "value",
            "type": "Value"
          }
        ],
        "Transitions": [
          {
            "name": "conditions",
            "type": "Conditions[]"
          },
          {
            "name": "from",
            "type": "string"
          },
          {
            "name": "to",
            "type": "string"
          }
        ],
        "Conditions": [
          {
            "name": "inputs",
            "type": "string[]"
          },
          {
            "name": "type",
            "type": "string"
          }
        ],
        "Metadata": [
          {
            "name": "author",
            "type": "string"
          },
          {
            "name": "createdAt",
            "type": "string"
          },
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "templateId",
            "type": "string"
          },
          {
            "name": "version",
            "type": "string"
          }
        ],
        "Variables": [
          {
            "name": "description",
            "type": "string"
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "validation",
            "type": "Validation"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "Validation": [
          {
            "name": "required",
            "type": "bool"
          },
          {
            "name": "minLength",
            "type": "uint256"
          },
          {
            "name": "maxLength",
            "type": "uint256"
          },
          {
            "name": "pattern",
            "type": "string"
          },
          {
            "name": "message",
            "type": "string"
          },
          {
            "name": "min",
            "type": "uint256"
          },
          {
            "name": "max",
            "type": "uint256"
          }
        ],
        "Issuer": [
          {
            "name": "id",
            "type": "string"
          }
        ],
        "Proof": [
          {
            "name": "created",
            "type": "string"
          },
          {
            "name": "proofPurpose",
            "type": "string"
          },
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "verificationMethod",
            "type": "string"
          }
        ],
        "VerifiableCredential": [
          {
            "name": "@context",
            "type": "string[]"
          },
          {
            "name": "credentialSubject",
            "type": "CredentialSubject"
          },
          {
            "name": "issuanceDate",
            "type": "string"
          },
          {
            "name": "issuer",
            "type": "Issuer"
          },
          {
            "name": "proof",
            "type": "Proof"
          },
          {
            "name": "type",
            "type": "string[]"
          }
        ]
      },
      "primaryType": "VerifiableCredential"
    }
  }
}